---
experiments:
  metero_use: ['Month', 'Weekday', 'Hour', 'PM10', 'SO2', 'NO2', 'O3', 'CO', 'T2M_C', 'D2M_C', 'PRES_hPa',
               'APCP1h_mm', 'RH2M_pct', 'U100', 'V100', 'WSPD100', 'WDIR100']
  save_npy: True
  dataset_num: 1
  model: MLP
#  model: PM25_GNN
#  model: PM25_GNN_nosub
#  model: GC_LSTM
#  model: LSTM
#  model: GRU
#  model: nodesFC_GRU

train:
  batch_size: 32
  epochs: 50
  exp_repeat: 3
  hist_len: 6  # Use 6 hours of historical data to reduce memory usage
  pred_len: 48  # Predict 48 hours into the future
  weight_decay: 0.0005
  early_stop: 10
  lr: 0.0005
  optimizer: 'RMSprop'  # Can be 'Adam' or 'RMSprop'
  momentum: 0.9  # For RMSprop if used

filepath:
  GPU-Server:
    knowair_fp: /root/autodl-tmp/processed_data/processed_data.npy
    results_dir: /root/autodl-tmp/results

data:
  metero_var:
    ['PM2.5', 'Month', 'Weekday', 'Hour', 'PM10', 'SO2', 'NO2', 'O3', 'CO', 'T2M_C', 'D2M_C', 'PRES_hPa',
     'APCP1h_mm', 'RH2M_pct', 'U100', 'V100', 'WSPD100', 'WDIR100']
     # Note: Only using observation features for MLP model, no forecast data to avoid data leakage

forecast:
  use_hours: 48  # Can be set to 48 or 72 depending on prediction length
  forecast_vars: ['T2M_C', 'D2M_C', 'PRES_hPa', 'APCP1h_mm', 'RH2M_pct',
                  'WSPD100', 'WDIR100', 'U100', 'V100']  # 9 forecast variables

dataset:
  data_start: [[2022, 1, 1, 0, 0], GMT]
  data_end: [[2024, 12, 31, 23, 0], GMT]

  1:
    train_start: [[2022, 1, 1, 0, 0], GMT]
    train_end: [[2023, 6, 30, 23, 0], GMT]
    val_start: [[2023, 7, 1, 0, 0], GMT]
    val_end: [[2024, 6, 16, 23, 0], GMT]
    test_start: [[2024, 6, 27, 0, 0], GMT]
    test_end: [[2024, 12, 31, 23, 0], GMT]

  2:
    train_start: [[2022, 1, 1, 0, 0], GMT]
    train_end: [[2023, 6, 30, 23, 0], GMT]
    val_start: [[2023, 7, 1, 0, 0], GMT]
    val_end: [[2024, 6, 16, 23, 0], GMT]
    test_start: [[2024, 6, 27, 0, 0], GMT]
    test_end: [[2024, 12, 31, 23, 0], GMT]

  3:
    train_start: [[2022, 1, 1, 0, 0], GMT]
    train_end: [[2023, 6, 30, 23, 0], GMT]
    val_start: [[2023, 7, 1, 0, 0], GMT]
    val_end: [[2024, 6, 16, 23, 0], GMT]
    test_start: [[2024, 6, 27, 0, 0], GMT]
    test_end: [[2024, 12, 31, 23, 0], GMT]
